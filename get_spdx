#!/usr/bin/python
# encoding: utf-8

import argparse
import os
import subprocess
from argparse import RawTextHelpFormatter
import logging

logger = logging.getLogger()
logger.setLevel(logging.INFO)
logging.basicConfig(filename="./get_spdx.log",level=logging.INFO)

parser = argparse.ArgumentParser(description='Scan OSS directory by scancode.', formatter_class=RawTextHelpFormatter)
parser.add_argument('src', help="The OSS directory to be scanned.")
parser.add_argument('-d', '--dst', default=None, help="The directory where spdx files be output. By default, spdx file will output into the current directory.")

args = parser.parse_args()
srcPath = os.path.abspath(args.src)
dstPath = os.path.abspath('./')

if os.path.isdir(srcPath) != True:
    raise Exception("%s is not a directory.\n", srcPath)
if args.dst is not None:
    dstPath = os.path.abspath(args.dst)
if os.path.exists(dstPath) == False:
    os.makedirs(dstPath)

currDir = os.path.abspath(os.curdir)
srcDir = os.path.dirname(srcPath)
srcName = os.path.basename(srcPath)
spdx_file = srcName + ".spdx"
spdx_file = os.path.join(dstPath, spdx_file)

"""Default config"""
dstPath = os.path.abspath('./')

"""Check parameters"""
os.system('./install-scancode.sh')

if os.path.exists(srcPath) == False:
    print("%s is not exist!\n" % srcPath)
    raise Exception("False!")

if args.dst is not None:
    dstPath = os.path.abspath(args.dst)
if os.path.exists(dstPath) == False:
    os.makedirs(dstPath)
print("SPDX files output to : %s" % dstPath)

"""Begin to scan src"""

scancode_cmd = "./scancode-toolkit/scancode -lpci --spdx-tv " + spdx_file + " " + srcName

try:
    res = subprocess.check_output(scancode_cmd, stderr=subprocess.STDOUT, shell=True)
except subprocess.CalledProcessError as e:
    raise Exception("Fail to invoke scancode.\n")
